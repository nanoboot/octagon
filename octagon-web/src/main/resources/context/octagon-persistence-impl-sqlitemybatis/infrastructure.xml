<!--
 Octagon: Database frontend.
 Copyright (C) 2020-2022 the original author or authors.

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; version 2
 of the License only.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="mybatis.mappers"/>-->
<!--    </bean>-->

    <bean id="octagonConfPathFactory"
          class="org.nanoboot.octagon.core.config.OctagonConfPathFactory">
    </bean>

    <bean id="octagonConfPath"
          factory-bean="octagonConfPathFactory"
          factory-method="createInstance" />

    <bean id="octagonConfigFactory"
          class="org.nanoboot.octagon.core.config.OctagonConfigFactory">
        <property name="octagonConfPath" ref="octagonConfPath"/>
    </bean>
    <bean id="octagonConfig"
          factory-bean="octagonConfigFactory"
          factory-method="createInstance">
    </bean>
    <bean id="octagonPluginsPropertiesFactory"
          class="org.nanoboot.octagon.core.config.OctagonPluginsPropertiesFactory">
        <property name="octagonConfPath" ref="octagonConfPath"/>
    </bean>
    <bean id="octagonPluginsProperties"
          factory-bean="octagonPluginsPropertiesFactory"
          factory-method="createInstance">
    </bean>
    

<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--        <property name="locations">-->
<!--            <bean factory-bean="octagonConfPath" factory-method="getConfigPath">-->
<!--                <constructor-arg value="bar"/>-->
<!--            </bean>-->
<!--            value="classpath:com/foo/jdbc.properties-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="dataSourceFactory"
          class="org.nanoboot.octagon.entity.misc.DataSourceFactory">
        <constructor-arg ref="octagonConfPath"/>
    </bean>

    <bean id="dataSource"
          factory-bean="dataSourceFactory"
          factory-method="createInstance" />

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="env" class="java.lang.String" scope="prototype">
        <constructor-arg>
            <value><![CDATA[${env}]]></value>
        </constructor-arg>
    </bean>
    <!-- todo move to plugin configuration -->
    <bean id="whiningEnabled" class="java.lang.Boolean" scope="prototype">
        <constructor-arg>
            <value><![CDATA[${whiningEnabled}]]></value>
        </constructor-arg>
    </bean>
    <bean id="reminderEnabled" class="java.lang.Boolean" scope="prototype">
        <constructor-arg>
            <value><![CDATA[${reminderEnabled}]]></value>
        </constructor-arg>
    </bean>
    <bean id="batchEnabled" class="java.lang.Boolean" scope="prototype">
        <constructor-arg>
            <value><![CDATA[${batchEnabled}]]></value>
        </constructor-arg>
    </bean>

</beans>
